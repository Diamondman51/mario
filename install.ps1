-------------------------------------------------------------------------------------------------------------

$ErrorActionPreference = 'Stop'

$exeName = "mario.exe"
$repoRawUrl = "https://raw.githubusercontent.com/Diamondman51/mario/main"
$installDir = "$env:USERPROFILE\AppData\Local\Programs\teacher"
$exePath = Join-Path $installDir $exeName

function InstallOrUpdate {
    Write-Host "üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∏–ª–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ $exeName..."

    if (!(Test-Path -Path $installDir)) {
        New-Item -ItemType Directory -Path $installDir | Out-Null
    }

    $downloadUrl = "$repoRawUrl/$exeName"
    $tempPath = Join-Path $env:TEMP $exeName

    # ‚ö° –ö–∞—á–∞–µ–º –±–∏–Ω–∞—Ä—å
    Invoke-WebRequest -Uri $downloadUrl -OutFile $tempPath

    $needUpdate = $true
    if (Test-Path $exePath) {
        $oldHash = Get-FileHash $exePath -Algorithm SHA256
        $newHash = Get-FileHash $tempPath -Algorithm SHA256
        if ($oldHash.Hash -eq $newHash.Hash) {
            $needUpdate = $false
            Write-Host "‚úÖ –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –ø–æ—Å–ª–µ–¥–Ω—è—è –≤–µ—Ä—Å–∏—è $exeName"
        }
    }

    if ($needUpdate) {
        Copy-Item -Path $tempPath -Destination $exePath -Force
        Unblock-File -Path $exePath
        Write-Host "‚úÖ $exeName –æ–±–Ω–æ–≤–ª—ë–Ω"
    }

    $envPath = [System.Environment]::GetEnvironmentVariable("Path", "User")
    if ($envPath -notlike "*$installDir*") {
        [System.Environment]::SetEnvironmentVariable("Path", "$envPath;$installDir", "User")
        Write-Host "‚úÖ –ü—É—Ç—å $installDir –¥–æ–±–∞–≤–ª–µ–Ω –≤ PATH (–¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è)"
    } else {
        Write-Host "‚ÑπÔ∏è –ü—É—Ç—å —É–∂–µ –≤ PATH"
    }
}


# –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ
function RegisterAutoUpdateTask {
    $taskName = "UpdateMario"
    $scriptPath = $MyInvocation.MyCommand.Definition

    $action = New-ScheduledTaskAction -Execute "powershell.exe" -Argument "-NoProfile -ExecutionPolicy Bypass -File `"$scriptPath`""
    $trigger = New-ScheduledTaskTrigger -Daily -At 12:00PM
    $settings = New-ScheduledTaskSettingsSet -AllowStartIfOnBatteries -DontStopIfGoingOnBatteries

    if (Get-ScheduledTask -TaskName $taskName -ErrorAction SilentlyContinue) {
        Unregister-ScheduledTask -TaskName $taskName -Confirm:$false
    }

    Register-ScheduledTask -Action $action -Trigger $trigger -Settings $settings -TaskName $taskName -Description "Auto update for mario.exe" -User $env:USERNAME
    Write-Host "‚úÖ –ê–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ (–µ–∂–µ–¥–Ω–µ–≤–Ω–æ –≤ 12:00)"
}




# –ó–∞–ø—É—Å–∫–∞–µ–º —É—Å—Ç–∞–Ω–æ–≤–∫—É / –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ
InstallOrUpdate
# –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –∞–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ
RegisterAutoUpdateTask
Start-Process $exePath

-----------------------------------------------------------------------------------------------------------------




# $ErrorActionPreference = 'Stop'

# $exeName = "mario.exe"
# $repoRawUrl = "https://raw.githubusercontent.com/Diamondman51/mario/main"
# $installDir = "$env:USERPROFILE\AppData\Local\Programs\teacher"
# $exePath = "$installDir\$exeName"

# function InstallOrUpdate {
#     Write-Host "üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∏–ª–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ $exeName..."

#     if (!(Test-Path -Path $installDir)) {
#         New-Item -ItemType Directory -Path $installDir | Out-Null
#     }

#     $downloadUrl = "$repoRawUrl/$exeName"
#     $tempPath = "$env:TEMP\$exeName"

#     try {
#         Invoke-WebRequest -Uri $downloadUrl -OutFile $tempPath -UseBasicParsing -ErrorAction Stop
#     } catch {
#         Write-Host "‚ö†Ô∏è –ù–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç—É, –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–ø—É—â–µ–Ω–æ"
#         return
#     }

#     $needUpdate = $true
#     if (Test-Path $exePath) {
#         $oldHash = Get-FileHash $exePath -Algorithm SHA256
#         $newHash = Get-FileHash $tempPath -Algorithm SHA256
#         if ($oldHash.Hash -eq $newHash.Hash) {
#             $needUpdate = $false
#             Write-Host "‚úÖ –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –ø–æ—Å–ª–µ–¥–Ω—è—è –≤–µ—Ä—Å–∏—è $exeName"
#         }
#     }

#     if ($needUpdate) {
#         Copy-Item -Path $tempPath -Destination $exePath -Force
#         Write-Host "‚úÖ $exeName –æ–±–Ω–æ–≤–ª—ë–Ω"
#     }

#     $envPath = [System.Environment]::GetEnvironmentVariable("Path", "User")
#     if ($envPath -notlike "*$installDir*") {
#         [System.Environment]::SetEnvironmentVariable("Path", "$envPath;$installDir", "User")
#         Write-Host "‚úÖ –ü—É—Ç—å $installDir –¥–æ–±–∞–≤–ª–µ–Ω –≤ PATH (–¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è)"
#     } else {
#         Write-Host "‚ÑπÔ∏è –ü—É—Ç—å —É–∂–µ –≤ PATH"
#     }
# }

# function RegisterAutoUpdateTask {
#     $taskName = "UpdateMario"
#     $scriptPath = "$installDir\install.ps1"

#     # –î–µ–π—Å—Ç–≤–∏–µ: —Å–∫—Ä—ã—Ç—ã–π –∑–∞–ø—É—Å–∫ PowerShell
#     $action = New-ScheduledTaskAction -Execute "powershell.exe" -Argument "-NoProfile -WindowStyle Hidden -ExecutionPolicy Bypass -File `"$scriptPath`""

#     # –¢—Ä–∏–≥–≥–µ—Ä—ã: –µ–∂–µ–¥–Ω–µ–≤–Ω–æ –≤ 12:00 + –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ Windows
#     $triggerDaily = New-ScheduledTaskTrigger -Daily -At 12:00PM
#     $triggerStartup = New-ScheduledTaskTrigger -AtStartup

#     # –ù–∞—Å—Ç—Ä–æ–π–∫–∏
#     $settings = New-ScheduledTaskSettingsSet -AllowStartIfOnBatteries -DontStopIfGoingOnBatteries

#     # –ü–µ—Ä–µ—Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –µ—Å–ª–∏ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
#     if (Get-ScheduledTask -TaskName $taskName -ErrorAction SilentlyContinue) {
#         Unregister-ScheduledTask -TaskName $taskName -Confirm:$false
#     }

#     Register-ScheduledTask -Action $action -Trigger @($triggerDaily, $triggerStartup) -Settings $settings -TaskName $taskName -Description "Auto update for mario.exe" -User $env:USERNAME

#     Write-Host "‚úÖ –ê–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ (12:00 –∏ –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ Windows, —Å–∫—Ä—ã—Ç–æ)"
# }

# # –í—ã–ø–æ–ª–Ω—è–µ–º —É—Å—Ç–∞–Ω–æ–≤–∫—É / –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ
# InstallOrUpdate

# # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –∞–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ
# RegisterAutoUpdateTask

# # üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Å—Ä–∞–∑—É (–≤ —Å–∫—Ä—ã—Ç–æ–º PowerShell –Ω–∏—á–µ–≥–æ –º–µ—à–∞—Ç—å –Ω–µ –±—É–¥–µ—Ç)
# Start-Process "$exePath"
